import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler
import numpy as np
df = pd.read_csv('Iris.csv')

Data Preprocessing
df.head()

df.tail()

df.describe()

df.shape
df.dtypes

df.isnull().sum()

# Group by species and calculate summary statistics for petal length
df.groupby('Species')['PetalLengthCm'].agg(['mean', 'median', 'min', 'max', 'std']).reset_index()

df['Species'].astype('category').cat.codes.unique().tolist()

Data Visualization
df.plot(kind ="scatter",x ='SepalLengthCm', y ='PetalLengthCm')
plt.grid()

sns.set_style("whitegrid")

sns.FacetGrid(df, hue ="Species", height = 6).map(plt.scatter, 'SepalLengthCm', 'PetalLengthCm').add_legend()

plt.figure(figsize=(6, 8))
sns.boxplot(y=df['SepalLengthCm'])
plt.ylabel('Sepal Length')
plt.title('Boxplot of Sepal Length')
plt.show()

sns.pairplot(df.drop(['Id'], axis = 1), hue='Species', height=2)
plt.hist(df['SepalWidthCm'], bins=20)

def removingOutliersIQR(columnName, df):
    Q1 = df[columnName].quantile(0.25)
    Q3 = df[columnName].quantile(0.75)

    IQR = Q3 - Q1

    lowerLimit = Q1 - 1.5*IQR
    upperlimit = Q3 + 1.5*IQR

    df = df[(df[columnName] >= lowerLimit) & (df[columnName] <= upperlimit)]
plt.figure(figsize=(6, 8))
sns.boxplot(y=df['PetalWidthCm'])
plt.ylabel('PetalWidthCm')
plt.title('Boxplot of PetalWidthCm')
plt.show()

removingOutliersIQR(columnName='PetalWidthCm', df=df)

plt.figure(figsize=(6, 8))
sns.boxplot(y=df['PetalWidthCm'])
plt.ylabel('PetalWidthCm')
plt.title('Boxplot of PetalWidthCm')
plt.show()

plt.figure(figsize=(6, 8))
sns.boxplot(y=df['SepalWidthCm'])
plt.ylabel('SepalWidthCm')
plt.title('Boxplot of SepalWidthCm')
plt.show()

# Calculate IQR
Q1 = df['SepalWidthCm'].quantile(0.25)
Q3 = df['SepalWidthCm'].quantile(0.75)
IQR = Q3 - Q1

# Define limits to identify outliers
lower_limit = Q1 - 1.5 * IQR
upper_limit = Q3 + 1.5 * IQR

# Remove outliers
df = df[(df['SepalWidthCm'] >= lower_limit) & (df['SepalWidthCm'] <= upper_limit)]

# Create a boxplot again without outliers
plt.figure(figsize=(6, 8))
sns.boxplot(y=df['SepalWidthCm'])
plt.ylabel('SepalWidthCm')
plt.title('Boxplot of SepalWidthCm without outliers')
plt.show()
